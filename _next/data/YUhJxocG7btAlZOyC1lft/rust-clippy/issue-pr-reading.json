{"pageProps":{"projectTitle":"pub.docs","meta":{"title":"IssueとPRを読む","date":"2022-02-03T21:50:49+09:00","draft":false},"list":"<ul>\n<li><a href=\"/rust-clippy/\">rust-lang/rust-clippyをさわる</a></li>\n<li><a href=\"/rust-clippy/contributing-guide-reading/index/\">Contributing to Clippy を読む</a></li>\n<li><a href=\"/rust-clippy/issue-pr-reading/index/\">IssueとPRを読む</a></li>\n</ul>\n","content":"<h1 id=\"issue%E3%81%A8pr%E3%82%92%E8%AA%AD%E3%82%80\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#issue%E3%81%A8pr%E3%82%92%E8%AA%AD%E3%82%80\">#</a> IssueとPRを読む</h1>\n<h2 id=\"issue-%237826\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#issue-%237826\">#</a> Issue <a href=\"https://github.com/rust-lang/rust-clippy/issues/7826\">#7826</a></h2>\n<blockquote>\n<p>will machine readable format be added? or is there already one?</p>\n</blockquote>\n<p>質問タイプ。エラーメッセージやlinterの出力を人間フレンドリーでなく機械フレンドリーなものはありますか？という疑問。</p>\n<p>回答として、<a href=\"https://doc.rust-lang.org/rustc/json.html\">rustc book / JSON output</a>があげられているので読んでみる。</p>\n<p>rustcによって出力されるJSON。これは <code>--error-format=json</code> flagをつけることで出てくる。</p>\n<p><strong>実際に unused variable でJSON形式でエラーを出してみた。</strong></p>\n<p>挙動</p>\n<ul>\n<li>正常にコンパイルされエラーが出ないならばJSONも出力されない(空の<code>{}</code>すら出てこない)</li>\n<li>メッセージが出るならば、メッセージひと単位あたりひとつのJSONが出力される。区切り文字は改行のようだった。このメッセージは <a href=\"https://github.com/oli-obk/cargo_metadata\">cargo_metadata</a> を用いてパースしたりできるらしい。</li>\n</ul>\n<pre><code class=\"language-rust:main.rs\">fn main() {\n  println!(\"HELLO: {}\", 123);\n  let x = 1234; // unused value\n}\n</code></pre>\n<pre><code class=\"language-json:message-1\">{\"message\":\"unused variable: `x`\",\"code\":{\"code\":\"unused_variables\",\"explanation\":null},\"level\":\"warning\",\"spans\":[{\"file_name\":\"main.rs\",\"byte_start\":48,\"byte_end\":49,\"line_start\":3,\"line_end\":3,\"column_start\":7,\"column_end\":8,\"is_primary\":true,\"text\":[{\"text\":\"  let x = 1234; // unused value\",\"highlight_start\":7,\"highlight_end\":8}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"`#[warn(unused_variables)]` on by default\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"if this is intentional, prefix it with an underscore\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"main.rs\",\"byte_start\":48,\"byte_end\":49,\"line_start\":3,\"line_end\":3,\"column_start\":7,\"column_end\":8,\"is_primary\":true,\"text\":[{\"text\":\"  let x = 1234; // unused value\",\"highlight_start\":7,\"highlight_end\":8}],\"label\":null,\"suggested_replacement\":\"_x\",\"suggestion_applicability\":\"MachineApplicable\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"warning: unused variable: `x`\\n --&gt; main.rs:3:7\\n  |\\n3 |   let x = 1234; // unused value\\n  |       ^ help: if this is intentional, prefix it with an underscore: `_x`\\n  |\\n  = note: `#[warn(unused_variables)]` on by default\\n\\n\"}\n</code></pre>\n<pre><code class=\"language-json:message-2\">{\"message\":\"1 warning emitted\",\"code\":null,\"level\":\"warning\",\"spans\":[],\"children\":[],\"rendered\":\"warning: 1 warning emitted\\n\\n\"}\n</code></pre>\n<p><img src=\"/assets/home/runner/work/pub.docs/pub.docs/content/rust-clippy/issue-pr-reading/index.md/image-1.jpg\" alt=\"image-1\"></p>\n<h2 id=\"issue-%237934\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#issue-%237934\">#</a> Issue <a href=\"https://github.com/rust-lang/rust-clippy/issues/7934\">#7934</a></h2>\n<blockquote>\n<p>ICE with <code>clippy::undocumented_unsafe_blocks</code></p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/portable-simd\">portable-simd</a>でICE(Internal Compile Error)が起きる。</p>\n<p>これrustcの問題では？と思ったが、報告されているエラーメッセージには以下のようにclippyに報告するように書いてある。</p>\n<pre><code>error: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust-clippy/issues/new\n</code></pre>\n<p>MCVE(Minimal Complete and Verifiable Example ようは条件を満たす最小単位のこと、この場合だとICEになる最小再現コード)が提示されている。試してみる。</p>\n<p>stableでは再現しなかった。nightlyを入れて <code>rustup run nightly cargo run</code> してもこのバージョンより新しいから(おそらく修正済みになっており)再現しなかった。</p>\n<p><img src=\"/assets/home/runner/work/pub.docs/pub.docs/content/rust-clippy/issue-pr-reading/index.md/image-2.jpg\" alt=\"image-2\"></p>\n<p>関連して PR <a href=\"https://github.com/rust-lang/rust-clippy/pull/7945\">#7945</a> を読む。</p>\n<h2 id=\"pr-%237945\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#pr-%237945\">#</a> PR <a href=\"https://github.com/rust-lang/rust-clippy/pull/7945\">#7945</a></h2>\n<blockquote>\n<p>Fix ICE in undocumented_unsafe_blocks</p>\n</blockquote>\n<p>Issue <a href=\"https://github.com/rust-lang/rust-clippy/issues/7934\">#7934</a> の解決PR。</p>\n<p>MCVEはテストに利用されるみたい。clippyでは <code>tests/ui/crashes</code> にICEが置かれるのかな。 auxiliary というディレクトリがある。auxiliaryは意味的に補助ということらしい？uiはどういう意味なんだろう。おそらく、複数ファイルによるtestは補助ディレクトリに<code>main.rs</code>以外を置いて<code>tests/ui/crashes</code>以下に<code>main.rs</code>を<code>ice-&lt;number&gt;</code>の形で置いているみたい？</p>\n<p>UIテストについては <a href=\"https://rustc-dev-guide.rust-lang.org/tests/adding.html#ui\">rustc-dev-guide/Guide to the UI tests</a>に記述がある。UIの名前が意味するところは分からなかった。</p>\n<p><a href=\"https://github.com/rust-lang/rust-clippy/tree/master/clippy_lints/src\">rust-clippyのclippy_lints/src以下</a> にruleがめちゃ置いてある。今回はこの中のlintのルールのひとつである <code>undocumented_unsafe_blocks</code> が修正されている。このルールは PR <a href=\"https://github.com/rust-lang/rust-clippy/pull/7748\">#7748</a> で追加されている。このlintは2人が別々に実装し結局こっちが採用された経緯があるみたい。確かにOSSで実装がバッティングしちゃうのはありそう。</p>\n<h2 id=\"pr-%237748\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#pr-%237748\">#</a> PR <a href=\"https://github.com/rust-lang/rust-clippy/pull/7748\">#7748</a></h2>\n<blockquote>\n<p>Add undocumented_unsafe_blocks lint</p>\n</blockquote>\n<p>unsafeブロックでドキュメントコメントが書かれてないなら警告を出すlint ruleの追加PR。</p>\n","toc":"<nav class=\"table-of-contents\"><ol><li><a href=\"#issue%E3%81%A8pr%E3%82%92%E8%AA%AD%E3%82%80\"> IssueとPRを読む</a><ol><li><a href=\"#issue-%237826\"> Issue #7826</a></li><li><a href=\"#issue-%237934\"> Issue #7934</a></li><li><a href=\"#pr-%237945\"> PR #7945</a></li><li><a href=\"#pr-%237748\"> PR #7748</a></li></ol></li></ol></nav>"},"__N_SSG":true}